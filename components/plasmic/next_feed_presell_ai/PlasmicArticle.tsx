// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fbc4Cxq5duuRi8TiUjb8g3
// Component: PXCvlbB-JMRV6
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { CmsQueryRepeater } from "@plasmicpkgs/plasmic-cms"; // plasmic-import: 8N9-WfZSaq/codeComponent
import { CmsRowField } from "@plasmicpkgs/plasmic-cms"; // plasmic-import: w6HdOz-Pcn/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_next_feed_presell_ai.module.css"; // plasmic-import: fbc4Cxq5duuRi8TiUjb8g3/projectcss
import sty from "./PlasmicArticle.module.css"; // plasmic-import: PXCvlbB-JMRV6/css

export type PlasmicArticle__VariantMembers = {};
export type PlasmicArticle__VariantsArgs = {};
type VariantPropType = keyof PlasmicArticle__VariantsArgs;
export const PlasmicArticle__VariantProps = new Array<VariantPropType>();

export type PlasmicArticle__ArgsType = {};
type ArgPropType = keyof PlasmicArticle__ArgsType;
export const PlasmicArticle__ArgProps = new Array<ArgPropType>();

export type PlasmicArticle__OverridesType = {
  root?: p.Flex<"div">;
};

export interface DefaultArticleProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicArticle__RenderFunc(props: {
  variants: PlasmicArticle__VariantsArgs;
  args: PlasmicArticle__ArgsType;
  overrides: PlasmicArticle__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicArticle.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicArticle.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicArticle.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <CmsQueryRepeater
            className={classNames("__wab_instance", sty.cmsDataLoader__kW2UJ)}
            desc={false}
            emptyMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iVlw
                    )}
                  >
                    {"No matching published entries found."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            forceEmptyState={false}
            forceLoadingState={false}
            limit={0 as const}
            loadingMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bY1J
                    )}
                  >
                    {"Loading..."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            noAutoRepeat={false}
            noLayout={false}
            useDraft={false}
          >
            <ph.DataCtxReader>
              {$ctx => (
                <div className={classNames(projectcss.all, sty.freeBox__pLbRk)}>
                  <CmsRowField
                    className={classNames(
                      "__wab_instance",
                      sty.cmsEntryField__jId07
                    )}
                    field={"logo" as const}
                    table={(() => {
                      try {
                        return undefined;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
              )}
            </ph.DataCtxReader>
          </CmsQueryRepeater>

          <CmsQueryRepeater
            className={classNames("__wab_instance", sty.cmsDataLoader__liQp4)}
            desc={false}
            emptyMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aa5Ru
                    )}
                  >
                    {"No matching published entries found."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            forceEmptyState={false}
            forceLoadingState={false}
            limit={0 as const}
            loadingMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__numUj
                    )}
                  >
                    {"Loading..."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            noAutoRepeat={false}
            noLayout={false}
            useDraft={false}
          >
            <ph.DataCtxReader>
              {$ctx => (
                <div className={classNames(projectcss.all, sty.freeBox__hfBeg)}>
                  <CmsRowField
                    className={classNames(
                      "__wab_instance",
                      sty.cmsEntryField___7Sno0
                    )}
                    field={"heroHeadline" as const}
                    table={(() => {
                      try {
                        return undefined;
                      } catch (e) {
                        if (e instanceof TypeError) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
              )}
            </ph.DataCtxReader>
          </CmsQueryRepeater>

          <CmsQueryRepeater
            className={classNames("__wab_instance", sty.cmsDataLoader__k1Tqk)}
            desc={false}
            emptyMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dyqbb
                    )}
                  >
                    {"No matching published entries found."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            forceEmptyState={false}
            forceLoadingState={false}
            limit={0 as const}
            loadingMessage={
              <ph.DataCtxReader>
                {$ctx => (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cxXaq
                    )}
                  >
                    {"Loading..."}
                  </div>
                )}
              </ph.DataCtxReader>
            }
            noAutoRepeat={false}
            noLayout={false}
            useDraft={false}
          >
            <ph.DataCtxReader>
              {$ctx => (
                <div className={classNames(projectcss.all, sty.freeBox__o3Yu5)}>
                  <CmsRowField
                    className={classNames(
                      "__wab_instance",
                      sty.cmsEntryField__ctwAx
                    )}
                    field={"heroSubHeadline" as const}
                  />
                </div>
              )}
            </ph.DataCtxReader>
          </CmsQueryRepeater>

          <CmsQueryRepeater
            className={classNames("__wab_instance", sty.cmsDataLoader___8OczV)}
            desc={false}
            emptyMessage={<ph.DataCtxReader>{$ctx => null}</ph.DataCtxReader>}
            forceEmptyState={false}
            forceLoadingState={false}
            limit={0 as const}
            loadingMessage={<ph.DataCtxReader>{$ctx => null}</ph.DataCtxReader>}
            noAutoRepeat={false}
            noLayout={false}
            useDraft={false}
          >
            <ph.DataCtxReader>
              {$ctx => (
                <div className={classNames(projectcss.all, sty.freeBox__pzHns)}>
                  <CmsRowField
                    className={classNames(
                      "__wab_instance",
                      sty.cmsEntryField__tNwY
                    )}
                    field={"heroImage" as const}
                  />

                  <CmsQueryRepeater
                    className={classNames(
                      "__wab_instance",
                      sty.cmsDataLoader___0Vz0R
                    )}
                    desc={false}
                    emptyMessage={
                      <ph.DataCtxReader>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iRXz5
                            )}
                          >
                            {"No matching published entries found."}
                          </div>
                        )}
                      </ph.DataCtxReader>
                    }
                    forceEmptyState={false}
                    forceLoadingState={false}
                    limit={0 as const}
                    loadingMessage={
                      <ph.DataCtxReader>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i9PX0
                            )}
                          >
                            {"Loading..."}
                          </div>
                        )}
                      </ph.DataCtxReader>
                    }
                    noAutoRepeat={false}
                    noLayout={false}
                    useDraft={false}
                  >
                    <ph.DataCtxReader>
                      {$ctx => (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nrEbP
                          )}
                        >
                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField___8VnIb
                            )}
                            field={"paragraph1" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__cHtw
                            )}
                            field={"image1" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__yRaNk
                            )}
                            field={"paragraph2" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField___4505K
                            )}
                            field={"image2" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__iF6KB
                            )}
                            field={"paragraph3" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField___8Z5QZ
                            )}
                            field={"image3" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__agdLb
                            )}
                            field={"paragraph4" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__fi3Rg
                            )}
                            field={"image4" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__eRe1D
                            )}
                            field={"paragraph5" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__mGS2
                            )}
                            field={"image5" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__gH2J5
                            )}
                            field={"paragraph6" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__uNtze
                            )}
                            field={"image6" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__vP3Jh
                            )}
                            field={"paragraph7" as const}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField___1YBcI
                            )}
                            field={"image7" as const}
                          />
                        </div>
                      )}
                    </ph.DataCtxReader>
                  </CmsQueryRepeater>
                </div>
              )}
            </ph.DataCtxReader>
          </CmsQueryRepeater>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicArticle__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicArticle__VariantsArgs;
    args?: PlasmicArticle__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicArticle__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicArticle__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicArticle__ArgProps,
          internalVariantPropNames: PlasmicArticle__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicArticle__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicArticle";
  } else {
    func.displayName = `PlasmicArticle.${nodeName}`;
  }
  return func;
}

export const PlasmicArticle = Object.assign(
  // Top-level PlasmicArticle renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicArticle
    internalVariantProps: PlasmicArticle__VariantProps,
    internalArgProps: PlasmicArticle__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Article",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicArticle;
/* prettier-ignore-end */
